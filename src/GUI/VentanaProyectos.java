/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Classes.DBConnection;
import Classes.Utilities;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Franco
 */
public class VentanaProyectos extends javax.swing.JFrame {

    /**
     * Creates new form VentanaUsuarios
     */
    private Vector<Integer> idsClientes = new Vector<>();
    private Vector<Integer> idsTrabajadores = new Vector<>();

    public VentanaProyectos() {
        initComponents();
        setLocationRelativeTo(null);
        Utilities.getClientesWithComboBox(comboBoxClientes, idsClientes);
        Utilities.getTrabajadoresWithComboBox(comboBoxTrabajadores, idsTrabajadores);
        comboBoxClientes.addItem("Todos");
        comboBoxClientes.setSelectedIndex(comboBoxClientes.getItemCount() - 1);
        comboBoxTrabajadores.addItem("Todos");
        comboBoxTrabajadores.setSelectedIndex(comboBoxTrabajadores.getItemCount() - 1);
        comboBoxClientesActionPerformed(null);
        tablaMouseClicked(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        buttonCrear = new javax.swing.JButton();
        buttonModificar = new javax.swing.JButton();
        buttonEliminar = new javax.swing.JButton();
        buttonDetalles = new javax.swing.JButton();
        buttonEstado = new javax.swing.JButton();
        comboBoxClientes = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        comboBoxTrabajadores = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Proyectos");

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabla.getTableHeader().setReorderingAllowed(false);
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);

        jLabel1.setText("Proyectos");

        jLabel2.setText("Proyectos Registrados");

        buttonCrear.setText("Crear");
        buttonCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCrearActionPerformed(evt);
            }
        });

        buttonModificar.setText("Modificar");
        buttonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModificarActionPerformed(evt);
            }
        });

        buttonEliminar.setText("Eliminar");
        buttonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEliminarActionPerformed(evt);
            }
        });

        buttonDetalles.setText("Detalles");
        buttonDetalles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDetallesActionPerformed(evt);
            }
        });

        buttonEstado.setText("Iniciar Proyecto");
        buttonEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEstadoActionPerformed(evt);
            }
        });

        comboBoxClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxClientesActionPerformed(evt);
            }
        });

        jLabel3.setText("Por Cliente:");

        jLabel4.setText("Por Usuario:");

        comboBoxTrabajadores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxTrabajadoresActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(buttonEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(buttonModificar, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                                    .addComponent(buttonCrear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(buttonEstado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(buttonDetalles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboBoxClientes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboBoxTrabajadores, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(220, 220, 220)
                        .addComponent(jLabel1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(10, 10, 10)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonCrear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonEliminar)
                        .addGap(23, 23, 23)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboBoxClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboBoxTrabajadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(buttonDetalles, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCrearActionPerformed
        if (Login.cargo.equals("Director")) {
            new CrearProyecto(tabla).setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Para realizar esta operacion, debe logearse con un usuario tipo Director");
        }
    }//GEN-LAST:event_buttonCrearActionPerformed

    private void buttonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEliminarActionPerformed
        if (tabla.getSelectedRow() == -1) {
            return;
        }

        if (!Login.cargo.equals("Director")) {
            JOptionPane.showMessageDialog(this, "Para realizar esta operacion, debe logearse con un usuario tipo Director");
            return;
        }

        String sql = "DELETE FROM public.proyecto WHERE id_proyecto = " + tabla.getValueAt(tabla.getSelectedRow(), 0) + ";";
        try {
            int result = DBConnection.executeQuery(sql);
            if (result == 1) {
                Utilities.deleteRowTable(tabla);
            }
        } catch (SQLException ex) {
            Logger.getLogger(CrearUsuario.class.getName()).log(Level.SEVERE, null, ex);
            Utilities.showErrorMessage(ex.getMessage());
        }
    }//GEN-LAST:event_buttonEliminarActionPerformed

    private void buttonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModificarActionPerformed
        if (tabla.getSelectedRow() == -1) {
            return;
        }

        if (((String) tabla.getValueAt(tabla.getSelectedRow(), 4)).equals("Terminado")) {
            return;
        }

        if (!Login.cargo.equals("Director")) {
            JOptionPane.showMessageDialog(this, "Para realizar esta operacion, debe logearse con un usuario tipo Director");
            return;
        }

        new CrearProyecto(tabla,
                (int) tabla.getValueAt(tabla.getSelectedRow(), 0),
                (String) tabla.getValueAt(tabla.getSelectedRow(), 1),
                (String) tabla.getValueAt(tabla.getSelectedRow(), 2),
                (String) tabla.getValueAt(tabla.getSelectedRow(), 3)
        ).setVisible(true);
    }//GEN-LAST:event_buttonModificarActionPerformed

    private void buttonDetallesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDetallesActionPerformed
        if (tabla.getSelectedRow() == -1) {
            return;
        }

        if (!((String) tabla.getValueAt(tabla.getSelectedRow(), 3)).equals(Login.nombre)) {
            JOptionPane.showMessageDialog(this, "Para realizar esta operacion, debe logearse con el Lider de este proyecto");
            return;
        }

        new VentanaTareas((Integer) tabla.getValueAt(tabla.getSelectedRow(), 0),
                (String) tabla.getValueAt(tabla.getSelectedRow(), 1)
        ).setVisible(true);

    }//GEN-LAST:event_buttonDetallesActionPerformed

    private void buttonEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEstadoActionPerformed
        if (tabla.getSelectedRow() == -1) {
            return;
        }

        String sql = "";
        if (buttonEstado.getText().equals("Iniciar Proyecto")) {
            sql = "UPDATE proyecto SET  estado = 'En proceso' WHERE id_proyecto = " + tabla.getValueAt(tabla.getSelectedRow(), 0) + ";";
            tabla.setValueAt("En proceso", tabla.getSelectedRow(), 4);
            buttonEstado.setText("Finalizar Proyecto");
        } else if (buttonEstado.getText().equals("Finalizar Proyecto")) {
            sql = "UPDATE proyecto SET  estado = 'Terminado' WHERE id_proyecto = " + tabla.getValueAt(tabla.getSelectedRow(), 0) + ";";
            tabla.setValueAt("Terminado", tabla.getSelectedRow(), 4);
            buttonEstado.setVisible(false);
        }

        try {
            DBConnection.executeQuery(sql);
        } catch (SQLException ex) {
            Logger.getLogger(VentanaTareas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonEstadoActionPerformed

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        if (tabla.getSelectedRow() == -1) {
            buttonEstado.setText("No iniciado");
            buttonEstado.setVisible(false);
            return;
        }

        String estado = (String) tabla.getValueAt(tabla.getSelectedRow(), 4);
        if (estado.equals("No iniciado")) {
            buttonEstado.setText("Iniciar Proyecto");
            buttonEstado.setVisible(true);
        } else if (estado.equals("En proceso")) {
            buttonEstado.setText("Finalizar Proyecto");
            buttonEstado.setVisible(true);
        } else if (estado.equals("Terminado")) {
            buttonEstado.setVisible(false);
        }
    }//GEN-LAST:event_tablaMouseClicked

    private void comboBoxClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxClientesActionPerformed
        busquedaEspecial();
    }//GEN-LAST:event_comboBoxClientesActionPerformed

    private void comboBoxTrabajadoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxTrabajadoresActionPerformed
        busquedaEspecial();
    }//GEN-LAST:event_comboBoxTrabajadoresActionPerformed

    private void busquedaEspecial(){
        Integer idCliente = null, idTrabajador = null;
        
        if (comboBoxClientes.getSelectedIndex() != -1 && idsClientes.size() > 0) {
            String item = (String) comboBoxClientes.getSelectedItem();
            idCliente = (item.equals("Todos") ? null : idsClientes.get(comboBoxClientes.getSelectedIndex()));
        }
        
        if (comboBoxTrabajadores.getSelectedIndex() != -1 && idsTrabajadores.size() > 0) {
            String item = (String) comboBoxTrabajadores.getSelectedItem();
            idTrabajador = (item.equals("Todos") ? null : idsTrabajadores.get(comboBoxTrabajadores.getSelectedIndex()));
        }
        
        Utilities.getProyectosWithTable(tabla,idCliente,idTrabajador );
    }
    
    /*
    SELECT p.id_proyecto, p.estado, p.cliente_asociado, p.lider_proyecto, p.duracion, p.nombre pn, t.nombre_completo,c.nombre cn 
                FROM public.proyecto p INNER JOIN public.trabajador t ON (p.lider_proyecto = t.id_trabajador) INNER JOIN 
                public.cliente c ON (p.cliente_asociado = c.id_cliente) INNER JOIN public.tarea ta ON (p.id_proyecto = ta.id_proyecto) 
                INNER JOIN public.tarea_recurso tr ON (tr.id_tarea = ta.id_tarea) INNER JOIN public.recurso r ON 
                (r.id_recurso = tr.id_recurso) WHERE r.id_trabajador = 2
    */
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaProyectos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaProyectos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaProyectos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaProyectos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaProyectos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCrear;
    private javax.swing.JButton buttonDetalles;
    private javax.swing.JButton buttonEliminar;
    private javax.swing.JButton buttonEstado;
    private javax.swing.JButton buttonModificar;
    private javax.swing.JComboBox comboBoxClientes;
    private javax.swing.JComboBox comboBoxTrabajadores;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
}
